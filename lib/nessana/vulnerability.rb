module Nessana
	class Vulnerability
		attr_reader :plugin_id
		attr_reader :cve
		attr_reader :cvss
		attr_reader :risk
		attr_reader :host
		attr_reader :protocol
		attr_reader :port
		attr_reader :name
		attr_reader :synopsis
		attr_reader :description
		attr_reader :solution
		attr_reader :see_also
		attr_reader :plugin_output

		def initialize(plugin_id, cve, cvss, risk, host, protocol, port, name, synopsis, description, solution, see_also, plugin_output)
			@plugin_id ||= plugin_id
			@cve ||= cve.empty? ? nil : cve
			@cvss ||= cvss
			@risk ||= risk
			@host ||= host
			@protocol ||= protocol
			@port ||= port
			@name ||= name
			@synopsis ||= synopsis
			@description ||= description.split("\n\n").map{ |paragraph| paragraph.split("\n").map{ |line| line.strip }.join(' ') }
			@solution ||= solution.split("\n\n").map{ |paragraph| paragraph.split("\n").map{ |line| line.strip }.join(' ') }
			@see_also ||= see_also.split("\n\n").map{ |paragraph| paragraph.split("\n").map{ |line| line.strip }.join(' ') }
			@plugin_output ||= plugin_output
		end

		def readable_host
			@host.to_s + ":" + @port.to_s + "/" + @protocol.to_s
		end
	end
end
